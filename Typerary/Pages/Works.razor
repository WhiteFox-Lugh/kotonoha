@page "/works"
@inject HttpClient Http

<Animate Animation="Animations.FadeIn" Duration="TimeSpan.FromSeconds(1)">
    <PageTitle>Works</PageTitle>

    <h1>作品一覧</h1>
</Animate>

@if (works == null)
{
    <div class="loader">Loading...</div>
}
else
{
    <Animate Animation="Animations.FadeUp" Duration="TimeSpan.FromSeconds(0.5)">
        <RadzenDataGrid AllowFiltering="true" AllowPaging="true" PageSize="20" AllowSorting="true" AllowMultiColumnSorting="true" ShowMultiColumnSortingIndex="true" Data="@works" TItem="WorkData" class="rz-shadow-2">
            <Columns>
                <RadzenDataGridColumn Width="5%" TItem="WorkData" Title="#" Filterable="false" Sortable="false" TextAlign="TextAlign.Center">
                    <Template Context="work">
                        @(works.IndexOf(work) + 1)
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn Width="40%" TItem="WorkData" Property="TitleYomi" Title="作品名 / Title">
                    <Template Context="work">
                        <RadzenText TextStyle="TextStyle.H5" TagName="TagName.H5" class="rz-color-primary-darker">
                            @(work.Title)
                        </RadzenText>
                        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.P" class="rz-color-primary-darker">
                            @(work.SubTitle)
                        </RadzenText>
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn Width="25%" TItem="WorkData" Property="Author" Title="著者 / Author">
                    <Template Context="work">
                        <RadzenText TextStyle="TextStyle.H6" TagName="TagName.P">
                            @(work.Author)
                        </RadzenText>
                        <RadzenText TextStyle="TextStyle.Caption" TagName="TagName.P">
                            @(work.AuthorYomi)
                        </RadzenText>
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn Width="10%" TItem="WorkData" Property="Language" Title="言語 / Language">
                    <Template Context="work">
                        <RadzenText TextStyle="TextStyle.Body1" TagName="TagName.P">
                            <RadzenBadge BadgeStyle=@(work.GetLanguageBadgeStyle()) Text=@(work.GetLanguageScreenName()) />
                        </RadzenText>
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn Width="20%" TItem="WorkData" Property="WorkUri" Sortable="false" Filterable="false" Title="ソース / Source">
                    <Template Context="work">
                        <RadzenButton Variant="Variant.Outlined" Shade="Shade.Light" Text="@(work.Source)" ButtonStyle="ButtonStyle.Primary" />
                    </Template>
                </RadzenDataGridColumn>
            </Columns>
        </RadzenDataGrid>
    </Animate>
}

@code {
    private List<WorkData> works;

    protected override async Task OnInitializedAsync()
    {
        var data = await Http.GetFromJsonAsync<WorkMetadata>("jsondata/works.json");
        works = data.WorkList;
    }

}
